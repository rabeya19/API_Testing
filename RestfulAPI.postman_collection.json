{
	"info": {
		"_postman_id": "a776e531-ca94-42f5-870f-16ac9f125ca5",
		"name": "RestfulAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16106831",
		"_collection_link": "https://planetary-firefly-855476.postman.co/workspace/Rabeya-Akter~6c5e7ffe-bbb2-4d19-8403-1dbad6e7adc8/collection/16106831-a776e531-ca94-42f5-870f-16ac9f125ca5?action=share&source=collection_link&creator=16106831"
	},
	"item": [
		{
			"name": "Create Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.environment.set(\"id\",data.bookingid)\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(\"Print First Name:\"+firstName)\r",
							"pm.environment.set(\"firstName\",firstName)\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(\"Print Last Name:\"+lastName)\r",
							"pm.environment.set(\"lastName\",lastName)\r",
							"\r",
							"var totalPrice = pm.variables.replaceIn(\"{{$randomPrice}}\")\r",
							"console.log(\"Print Total Price:\"+totalPrice)\r",
							"pm.environment.set(\"totalPrice\",totalPrice)\r",
							"\r",
							"var depositPaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"console.log(\"Print Deposit Paid:\"+depositPaid)\r",
							"pm.environment.set(\"depositPaid\",depositPaid)\r",
							"\r",
							"var checkIn = pm.variables.replaceIn(\"{{$randomDatePast}}\")\r",
							"console.log(\"Print Check In Time:\"+checkIn)\r",
							"pm.environment.set(\"checkIn\",checkIn)\r",
							"\r",
							"var checkOut = pm.variables.replaceIn(\"{{$randomDateFuture}}\")\r",
							"console.log(\"Print Check Out Time:\"+checkOut)\r",
							"pm.environment.set(\"checkOut\",checkOut)\r",
							"\r",
							"var additionalNeeds = pm.variables.replaceIn(\"{{$randomWord}}\")\r",
							"console.log(\"Print Additional Needs:\"+additionalNeeds)\r",
							"pm.environment.set(\"additonalNeeds\",additionalNeeds)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"{{firstName}}\",\r\n\t\"lastname\": \"{{lastName}}\",\r\n\t\"totalprice\": {{totalPrice}},\r\n\t\"depositpaid\": {{depositPaid}},\r\n\t\"bookingdates\": {\r\n    \t\"checkin\": \"{{checkIn}}\",\r\n    \t\"checkout\": \"{{checkOut}}\"\r\n\t},\r\n\t\"additionalneeds\": \"{{additonalNeeds}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_url}}/booking/",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var code = pm.response.code\r",
							"console.log(code)\r",
							"\r",
							"if (code==200){\r",
							"\r",
							"var data = pm.response.json()\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"First Name Validation\",function(){\r",
							"     pm.expect(data.firstname).to.eql(pm.environment.get(\"firstName\"))\r",
							"})\r",
							"pm.test(\"Last Name Validation\",function(){\r",
							"     pm.expect(data.lastname).to.eql(pm.environment.get(\"lastName\"))\r",
							"})\r",
							"pm.test(\"Total Price Validation\",function(){\r",
							"     pm.expect(data.totalprice).to.eql(parseInt(pm.environment.get(\"totalPrice\")))\r",
							"})\r",
							"pm.test(\"Deposit Paid Validation\",function(){\r",
							"     pm.expect(data.depositpaid).to.eql(pm.environment.get(\"depositPaid\")=='true')\r",
							"})\r",
							"pm.test(\"CheckIn Date Validation\", function(){\r",
							"    const storedCheckIn = new Date(pm.environment.get(\"checkIn\"));\r",
							"    pm.expect(data.bookingdates.checkin).to.eql(storedCheckIn.toISOString().split('T')[0]);\r",
							"})\r",
							"\r",
							"pm.test(\"CheckIn Date Validation\", function(){\r",
							"    const storedCheckOut = new Date(pm.environment.get(\"checkIn\"));\r",
							"    pm.expect(data.bookingdates.checkin).to.eql(storedCheckOut.toISOString().split('T')[0]);\r",
							"})\r",
							"\r",
							"pm.test(\"Additional Needs Validation\",function(){\r",
							"     pm.expect(data.additionalneeds).to.eql(pm.environment.get(\"additonalNeeds\"))\r",
							"})\r",
							"} else if(code==404){\r",
							"    pm.test(\"Not Found\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_url}}/booking/{{id}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var token_val = pm.response.json()\r",
							"pm.environment.set(\"Value\",token_val.token)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_url}}/auth",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(\"Print First Name:\"+firstName)\r",
							"pm.environment.set(\"firstName\",firstName)\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(\"Print Last Name:\"+lastName)\r",
							"pm.environment.set(\"lastName\",lastName)\r",
							"\r",
							"var totalPrice = pm.variables.replaceIn(\"{{$randomPrice}}\")\r",
							"console.log(\"Print Total Price:\"+totalPrice)\r",
							"pm.environment.set(\"totalPrice\",totalPrice)\r",
							"\r",
							"var depositPaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"console.log(\"Print Deposit Paid:\"+depositPaid)\r",
							"pm.environment.set(\"depositPaid\",depositPaid)\r",
							"\r",
							"var checkIn = pm.variables.replaceIn(\"{{$randomDatePast}}\")\r",
							"console.log(\"Print Check In Time:\"+checkIn)\r",
							"pm.environment.set(\"checkIn\",checkIn)\r",
							"\r",
							"var checkOut = pm.variables.replaceIn(\"{{$randomDateFuture}}\")\r",
							"console.log(\"Print Check Out Time:\"+checkOut)\r",
							"pm.environment.set(\"checkOut\",checkOut)\r",
							"\r",
							"var additionalNeeds = pm.variables.replaceIn(\"{{$randomWord}}\")\r",
							"console.log(\"Print Additional Needs:\"+additionalNeeds)\r",
							"pm.environment.set(\"additonalNeeds\",additionalNeeds)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{Value}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"{{firstName}}\",\r\n\t\"lastname\": \"{{lastName}}\",\r\n\t\"totalprice\": {{totalPrice}},\r\n\t\"depositpaid\": {{depositPaid}},\r\n\t\"bookingdates\": {\r\n    \t\"checkin\": \"{{checkIn}}\",\r\n    \t\"checkout\": \"{{checkOut}}\"\r\n\t},\r\n\t\"additionalneeds\": \"{{additonalNeeds}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_url}}/booking/{{id}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"pm.test(\"First Name Validation\",function(){\r",
							"     pm.expect(data.firstname).to.eql(pm.environment.get(\"firstName\"))\r",
							"})\r",
							"pm.test(\"Last Name Validation\",function(){\r",
							"     pm.expect(data.lastname).to.eql(pm.environment.get(\"lastName\"))\r",
							"})\r",
							"pm.test(\"Total Price Validation\",function(){\r",
							"     pm.expect(data.totalprice).to.eql(parseInt(pm.environment.get(\"totalPrice\")))\r",
							"})\r",
							"pm.test(\"Deposit Paid Validation\",function(){\r",
							"     pm.expect(data.depositpaid).to.eql(pm.environment.get(\"depositPaid\")=='true')\r",
							"})\r",
							"pm.test(\"CheckIn Date Validation\", function(){\r",
							"    const storedCheckIn = new Date(pm.environment.get(\"checkIn\"));\r",
							"    pm.expect(data.bookingdates.checkin).to.eql(storedCheckIn.toISOString().split('T')[0]);\r",
							"})\r",
							"\r",
							"pm.test(\"CheckIn Date Validation\", function(){\r",
							"    const storedCheckOut = new Date(pm.environment.get(\"checkIn\"));\r",
							"    pm.expect(data.bookingdates.checkin).to.eql(storedCheckOut.toISOString().split('T')[0]);\r",
							"})\r",
							"\r",
							"pm.test(\"Additional Needs Validation\",function(){\r",
							"     pm.expect(data.additionalneeds).to.eql(pm.environment.get(\"additonalNeeds\"))\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_url}}/booking/{{id}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Booking",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{Value}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{Base_url}}/booking/{{id}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}